<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd 
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context.xsd 
						http://www.springframework.org/schema/mvc
						http://www.springframework.org/schema/mvc/spring-mvc.xsd
						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop.xsd
						http://www.springframework.org/schema/tx
						http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!--扫描所有具有注解的类 -->
	<context:component-scan base-package="iie.*" />
	<!--静态资源访问 -->
	<mvc:default-servlet-handler />
	<context:annotation-config />
	<!--开启注解模式 -->
	<mvc:annotation-driven>
		<!--解决could not initialize proxy - no Session的问题 -->
		<mvc:message-converters>
			<!-- Use the HibernateAware mapper instead of the default -->
			<bean
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="objectMapper">
					<bean class="iie.tools.MyConfigClass" />
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<mvc:resources mapping="/error/**" location="/" />

	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<mvc:exclude-mapping path="/login.jsp" />
			<mvc:exclude-mapping path="/**.html" />
			<mvc:exclude-mapping path="/roompage/**" />
			<mvc:exclude-mapping path="/Admin/getErrorMsg" />
			<mvc:exclude-mapping path="/Admin/loginAjax" />
			<mvc:exclude-mapping path="/Admin/logoutAjax" />
			<mvc:exclude-mapping path="/Admin/ssoLogin" />
			<mvc:exclude-mapping path="/SecRule/getSSORulesById" />
			<mvc:exclude-mapping path="/Admin/updatePwdOfLongTime" />
			<mvc:exclude-mapping path="/css/**" />
			<mvc:exclude-mapping path="/js/**" />
			<mvc:exclude-mapping path="/topo/**" />
			<mvc:exclude-mapping path="/images/**" />
			<mvc:exclude-mapping path="/Topo/accept" />
			<mvc:exclude-mapping path="/ant/**" />
			<bean class="iie.tools.LoginInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors>

	<bean id="jspViewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<bean
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<map>
				<entry key="ResourceNotFoundException" value="common/error/resourceNotFoundError" />
				<entry key=".DataAccessException" value="common/error/dataAccessError" />
			</map>
		</property>
		<property name="statusCodes">
			<map>
				<entry key="common/error/resourceNotFoundError" value="404" />
				<entry key="common/error/dataAccessError" value="500" />
			</map>
		</property>
	</bean>


	<!-- <import resource="classpath:applicationContext.xml"/> -->
	<!-- 数据源配置 <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean"> 
		<property name="jndiName" value="java:comp/env/jdbc/MysqlDataSource" /> </bean> -->
		
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:/conf/jdbc.properties</value>
 			</list>
		</property>
	</bean>

<!-- 	
	<bean id="propertyConfigurer" class="iie.tools.PropertyPlaceholderConfigurerCover">
		<property name="locations">
			<list>
				<value>classpath:/conf/jdbc.properties</value>
			</list>
		</property>
	</bean>	
-->
	<bean id="druidDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" /> 
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />

		<property name="maxActive" value="50" />
		<property name="initialSize" value="1" />
		<property name="maxWait" value="60000" />
		<property name="minIdle" value="1" />

		<property name="timeBetweenEvictionRunsMillis" value="3000" />
		<property name="minEvictableIdleTimeMillis" value="300000" />

		<property name="validationQuery" value="SELECT 'x' FROM DUAL" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		
		<!-- 超过时间限制是否回收 -->  
		<property name="removeAbandoned" value="true" />  
		<!-- 超时时间；单位为秒。60秒=1分钟 -->  
		<property name="removeAbandonedTimeout" value="60" />  
		<!-- 关闭abanded连接时输出错误日志 -->  
		<property name="logAbandoned" value="true" />    

		<!-- 开启Druid的监控统计功能 -->
		<property name="filters" value="stat,wall" />
		<property name="proxyFilters">
			<list>
				<ref bean="stat-filter" />
			</list>
		</property>
	</bean>

	<bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
		<!-- 慢sql时间设置,即执行时间大于50毫秒的都是慢sql -->
		<property name="slowSqlMillis" value="1000" />
		<property name="logSlowSql" value="true" />
	</bean>

	<mvc:annotation-driven>
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.StringHttpMessageConverter" />
			<bean
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
		</mvc:message-converters>
	</mvc:annotation-driven>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="druidDataSource" />
		<property name="hibernateProperties">
			<value>
				<!-- hibernate.hbm2ddl.auto=update -->
				hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
				<!-- 设置为true时，对HibernateHQL语句进行打印输出 -->
				hibernate.show_sql=false
				hibernate.format_sql=true
				hibernate.connection.autocommit=true
			</value>
		</property>
		<property name="mappingLocations">
			<list>
				<!-- 添加hibernate pojo映射后需要添加xml文件关联 -->
				<value>classpath:iie/pojo/NmsAdmin.hbm.xml</value>
				<value>classpath:iie/pojo/NmsAlarm.hbm.xml</value>
				<value>classpath:iie/pojo/NmsAlarmReport.hbm.xml</value>
				<value>classpath:iie/pojo/NmsAsset.hbm.xml</value>
				<value>classpath:iie/pojo/NmsAssetType.hbm.xml</value>
				<value>classpath:iie/pojo/NmsAuditLog.hbm.xml</value>
				<value>classpath:iie/pojo/NmsAuditConfig.hbm.xml</value>
				<value>classpath:iie/pojo/NmsBmcInfo.hbm.xml</value>
				<value>classpath:iie/pojo/NmsCollectModule.hbm.xml</value>
				<value>classpath:iie/pojo/NmsCpuInfo.hbm.xml</value>
				<value>classpath:iie/pojo/NmsDepartment.hbm.xml</value>
				<value>classpath:iie/pojo/NmsDiskioInfo.hbm.xml</value>
				<value>classpath:iie/pojo/NmsDynamicInfo.hbm.xml</value>
				<value>classpath:iie/pojo/NmsFilesysInfo.hbm.xml</value>
				<value>classpath:iie/pojo/NmsFunction.hbm.xml</value>
				<value>classpath:iie/pojo/NmsMemInfo.hbm.xml</value>
				<value>classpath:iie/pojo/NmsNetifInfo.hbm.xml</value>
				<value>classpath:iie/pojo/NmsProcessInfo.hbm.xml</value>
				<value>classpath:iie/pojo/NmsRole.hbm.xml</value>
				<value>classpath:iie/pojo/NmsRoleFunction.hbm.xml</value>
				<value>classpath:iie/pojo/NmsRule.hbm.xml</value>
				<value>classpath:iie/pojo/NmsRuleAsset.hbm.xml</value>
				<value>classpath:iie/pojo/NmsRuleAssetIndex.hbm.xml</value>
				<value>classpath:iie/pojo/NmsStaticInfo.hbm.xml</value>
				<value>classpath:iie/pojo/NmsTopoLink.hbm.xml</value>
				<value>classpath:iie/pojo/NmsTopoMap.hbm.xml</value>
				<value>classpath:iie/pojo/NmsTopoMeta.hbm.xml</value>
				<value>classpath:iie/pojo/NmsTopoNode.hbm.xml</value>
				<value>classpath:iie/pojo/NmsTopoArea.hbm.xml</value>
				<value>classpath:iie/pojo/NmsPingInfo.hbm.xml</value>
				<value>classpath:iie/pojo/NmsRoomPage.hbm.xml</value>
				<value>classpath:iie/pojo/NmsTomcatInfo.hbm.xml</value>
				<value>classpath:iie/pojo/NmsMysqlInfo.hbm.xml</value>
				<value>classpath:iie/pojo/NmsSecRule.hbm.xml</value>
				<value>classpath:iie/pojo/NmsLicense.hbm.xml</value>
				<value>classpath:iie/pojo/NmsDatabaseBasic.hbm.xml</value>
				<value>classpath:iie/pojo/NmsDatabaseConfig.hbm.xml</value>
				<value>classpath:iie/pojo/NmsDatabaseStatus.hbm.xml</value>
				<value>classpath:iie/pojo/NmsDatabaseSql.hbm.xml</value>
				<value>classpath:iie/pojo/NmsDatabaseStorage.hbm.xml</value>
				<value>classpath:iie/pojo/NmsMiddlewareBasic.hbm.xml</value>
				<value>classpath:iie/pojo/NmsMiddlewareConfig.hbm.xml</value>
				<value>classpath:iie/pojo/NmsMiddlewareStatus.hbm.xml</value>
				<value>classpath:iie/pojo/NmsMiddlewareInstance.hbm.xml</value>
				<value>classpath:iie/pojo/NmsYthSoft.hbm.xml</value>
				<value>classpath:iie/pojo/NmsYthAccount.hbm.xml</value>
				<value>classpath:iie/pojo/NmsYthApp.hbm.xml</value>
				<value>classpath:iie/pojo/NmsYthAppAccount.hbm.xml</value>
				<value>classpath:iie/pojo/NmsSoft.hbm.xml</value>
				<value>classpath:iie/pojo/NmsRuleSoft.hbm.xml</value>
				<value>classpath:iie/pojo/NmsAlarmSoft.hbm.xml</value>
				<value>classpath:iie/pojo/NmsAlarmSoftReport.hbm.xml</value>
				<value>classpath:iie/pojo/NmsUser.hbm.xml</value>
				<value>classpath:iie/pojo/NmsConfig.hbm.xml</value>
				<value>classpath:iie/pojo/NmsTriManagement.hbm.xml</value>
			</list>
		</property>
	</bean>

	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate4.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- 事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" read-only="false" />
			<tx:method name="add*" propagation="REQUIRED" read-only="false" />
			<tx:method name="update*" propagation="REQUIRED" read-only="false" />
			<tx:method name="del*" propagation="REQUIRED" read-only="false" />
			<tx:method name="find*" propagation="REQUIRED" read-only="true" />
			<tx:method name="get*" propagation="REQUIRED" read-only="true" />
			<tx:method name="page*" propagation="REQUIRED" read-only="true" />
			<tx:method name="createHQLQuery" propagation="REQUIRED" />
			<tx:method name="createSQLQuery" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut id="txPointcut" expression="execution(* iie.service.*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut" />
	</aop:config>
	<tx:annotation-driven transaction-manager="transactionManager" />


	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="10485760" />
	</bean>

</beans>